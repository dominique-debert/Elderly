
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ActivityScalarFieldEnum = {
  id: 'id',
  creatorId: 'creatorId',
  title: 'title',
  description: 'description',
  startDate: 'startDate',
  endDate: 'endDate',
  location: 'location',
  gpsCoordinates: 'gpsCoordinates',
  maxSpots: 'maxSpots',
  categoryId: 'categoryId',
  recurring: 'recurring',
  frequency: 'frequency',
  reducedMobilityAccess: 'reducedMobilityAccess',
  difficultyLevel: 'difficultyLevel',
  cost: 'cost',
  status: 'status',
  weatherRequirements: 'weatherRequirements',
  transportOptions: 'transportOptions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  actionType: 'actionType',
  description: 'description',
  ipAddress: 'ipAddress',
  device: 'device',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ActivityRegistrationScalarFieldEnum = {
  id: 'id',
  activityId: 'activityId',
  userId: 'userId',
  registrationDate: 'registrationDate',
  status: 'status',
  attendanceConfirmed: 'attendanceConfirmed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BadgeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  categoryId: 'categoryId',
  description: 'description',
  icon: 'icon',
  level: 'level',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userBadgeId: 'userBadgeId'
};

exports.Prisma.CognitiveExerciseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  categoryId: 'categoryId',
  difficultyLevel: 'difficultyLevel',
  durationMinutes: 'durationMinutes',
  description: 'description',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CollaborativeProjectScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  creatorId: 'creatorId',
  creationDate: 'creationDate',
  status: 'status',
  categoryId: 'categoryId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConversationParticipantScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  userId: 'userId',
  dateAdded: 'dateAdded',
  administrator: 'administrator',
  lastAccess: 'lastAccess',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExerciseProgramScalarFieldEnum = {
  id: 'id',
  name: 'name',
  categoryId: 'categoryId',
  difficultyLevel: 'difficultyLevel',
  adaptedForReducedMobility: 'adaptedForReducedMobility',
  durationMinutes: 'durationMinutes',
  description: 'description',
  videoLink: 'videoLink',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ForumCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  parentCategoryId: 'parentCategoryId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ForumMessageScalarFieldEnum = {
  id: 'id',
  topicId: 'topicId',
  authorId: 'authorId',
  content: 'content',
  solutionMessage: 'solutionMessage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ForumTopicScalarFieldEnum = {
  id: 'id',
  categoryId: 'categoryId',
  authorId: 'authorId',
  title: 'title',
  pinned: 'pinned',
  status: 'status',
  views: 'views',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HealthIndicatorScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  recordingDate: 'recordingDate',
  stepCount: 'stepCount',
  sleepDurationMinutes: 'sleepDurationMinutes',
  sleepQuality: 'sleepQuality',
  weight: 'weight',
  moodId: 'moodId',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MoodScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  valence: 'valence',
  intensity: 'intensity',
  color: 'color',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HelpOfferScalarFieldEnum = {
  id: 'id',
  requestId: 'requestId',
  helperId: 'helperId',
  offerDate: 'offerDate',
  message: 'message',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HelpRequestScalarFieldEnum = {
  id: 'id',
  creatorId: 'creatorId',
  title: 'title',
  description: 'description',
  neededDate: 'neededDate',
  estimatedDuration: 'estimatedDuration',
  location: 'location',
  gpsCoordinates: 'gpsCoordinates',
  categoryId: 'categoryId',
  recurring: 'recurring',
  frequency: 'frequency',
  status: 'status',
  pointsOffered: 'pointsOffered',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LocalServiceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  categoryId: 'categoryId',
  address: 'address',
  gpsCoordinates: 'gpsCoordinates',
  phone: 'phone',
  website: 'website',
  description: 'description',
  hours: 'hours',
  seniorFriendly: 'seniorFriendly',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MedicationReminderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  medicationName: 'medicationName',
  dosage: 'dosage',
  morningReminderTime: 'morningReminderTime',
  noonReminderTime: 'noonReminderTime',
  eveningReminderTime: 'eveningReminderTime',
  nightReminderTime: 'nightReminderTime',
  daysOfWeek: 'daysOfWeek',
  instructions: 'instructions',
  active: 'active',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MenuItemScalarFieldEnum = {
  id: 'id',
  label: 'label',
  key: 'key'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  senderId: 'senderId',
  content: 'content',
  sendDate: 'sendDate',
  type: 'type',
  read: 'read',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MunicipalEventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  startDate: 'startDate',
  endDate: 'endDate',
  location: 'location',
  gpsCoordinates: 'gpsCoordinates',
  organizer: 'organizer',
  contact: 'contact',
  officialLink: 'officialLink',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  content: 'content',
  read: 'read',
  actionLink: 'actionLink',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationPreferencesScalarFieldEnum = {
  userId: 'userId',
  messageNotification: 'messageNotification',
  activityNotification: 'activityNotification',
  helpNotification: 'helpNotification',
  forumNotification: 'forumNotification',
  emailNotification: 'emailNotification',
  smsNotification: 'smsNotification',
  pushNotification: 'pushNotification',
  quietHoursStart: 'quietHoursStart',
  quietHoursEnd: 'quietHoursEnd',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NutritionalAdviceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  categoryId: 'categoryId',
  season: 'season',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectMemberScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  userId: 'userId',
  role: 'role',
  joinDate: 'joinDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectTaskScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  title: 'title',
  description: 'description',
  creationDate: 'creationDate',
  dueDate: 'dueDate',
  status: 'status',
  assigneeId: 'assigneeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ResourceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  type: 'type',
  categoryId: 'categoryId',
  authorId: 'authorId',
  adminValidated: 'adminValidated',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SatisfactionSurveyScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  startDate: 'startDate',
  endDate: 'endDate',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  refreshToken: 'refreshToken',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  expiresAt: 'expiresAt',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress'
};

exports.Prisma.ServiceCompletedScalarFieldEnum = {
  id: 'id',
  requestId: 'requestId',
  helperId: 'helperId',
  completionDate: 'completionDate',
  actualDuration: 'actualDuration',
  creatorComment: 'creatorComment',
  helperComment: 'helperComment',
  creatorRating: 'creatorRating',
  helperRating: 'helperRating',
  pointsExchanged: 'pointsExchanged',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ServiceRatingScalarFieldEnum = {
  id: 'id',
  serviceId: 'serviceId',
  userId: 'userId',
  rating: 'rating',
  comment: 'comment',
  ratingDate: 'ratingDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  categoryId: 'categoryId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SurveyResponseScalarFieldEnum = {
  id: 'id',
  surveyId: 'surveyId',
  userId: 'userId',
  responses: 'responses',
  responseDate: 'responseDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TrustCircleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  contactId: 'contactId',
  dateAdded: 'dateAdded',
  accessLevel: 'accessLevel',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TrustedContactScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  relationship: 'relationship',
  shareMedications: 'shareMedications',
  shareHealthIndicators: 'shareHealthIndicators',
  shareWellnessActivities: 'shareWellnessActivities',
  emergencyAlerts: 'emergencyAlerts',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UrbanIssueReportScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  categoryId: 'categoryId',
  description: 'description',
  address: 'address',
  gpsCoordinates: 'gpsCoordinates',
  reportDate: 'reportDate',
  status: 'status',
  cityReference: 'cityReference',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  firstName: 'firstName',
  lastName: 'lastName',
  birthDate: 'birthDate',
  profession: 'profession',
  city: 'city',
  postalCode: 'postalCode',
  address: 'address',
  description: 'description',
  latitude: 'latitude',
  longitude: 'longitude',
  phone: 'phone',
  avatar: 'avatar',
  registrationDate: 'registrationDate',
  helpPoints: 'helpPoints',
  reducedMobility: 'reducedMobility',
  status: 'status',
  isAdmin: 'isAdmin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserActivityScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  completionDate: 'completionDate',
  exerciseProgramId: 'exerciseProgramId',
  cognitiveExerciseId: 'cognitiveExerciseId',
  durationMinutes: 'durationMinutes',
  perceivedDifficultyLevel: 'perceivedDifficultyLevel',
  enjoymentLevel: 'enjoymentLevel',
  comment: 'comment',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserBadgeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  badgeId: 'badgeId',
  achievementDate: 'achievementDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserContactsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  contactId: 'contactId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContactRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  contactId: 'contactId',
  status: 'status',
  message: 'message',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlockedContactScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  contactId: 'contactId',
  reason: 'reason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserDeviceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  deviceType: 'deviceType',
  deviceName: 'deviceName',
  operatingSystem: 'operatingSystem',
  notificationToken: 'notificationToken',
  lastConnection: 'lastConnection',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserPreferencesScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  notificationMessages: 'notificationMessages',
  notificationForum: 'notificationForum',
  notificationActivities: 'notificationActivities',
  emailUpdates: 'emailUpdates',
  smsUpdates: 'smsUpdates',
  frequencyInstant: 'frequencyInstant',
  frequencyDaily: 'frequencyDaily',
  fontSize: 'fontSize',
  highContrast: 'highContrast',
  statusVisibilityEverybody: 'statusVisibilityEverybody',
  statusVisibilityFriends: 'statusVisibilityFriends',
  statusVisibilityNoOne: 'statusVisibilityNoOne',
  messagesFromEverybody: 'messagesFromEverybody',
  messagesFromFriends: 'messagesFromFriends',
  messagesFromNoOne: 'messagesFromNoOne',
  dataSharing: 'dataSharing',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserInterestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  interestId: 'interestId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InterestScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserSkillScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  skillId: 'skillId',
  level: 'level',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserStatisticsScalarFieldEnum = {
  userId: 'userId',
  servicesProvided: 'servicesProvided',
  servicesReceived: 'servicesReceived',
  activitiesParticipated: 'activitiesParticipated',
  activitiesOrganized: 'activitiesOrganized',
  forumMessages: 'forumMessages',
  totalHelpPoints: 'totalHelpPoints',
  networkSize: 'networkSize',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VideoCallScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  initiatorId: 'initiatorId',
  startDate: 'startDate',
  endDate: 'endDate',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WellnessBadgeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  categoryId: 'categoryId',
  image: 'image',
  level: 'level',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WellnessGoalScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  categoryId: 'categoryId',
  targetValue: 'targetValue',
  unit: 'unit',
  frequency: 'frequency',
  startDate: 'startDate',
  endDate: 'endDate',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WellnessGoalProgressScalarFieldEnum = {
  id: 'id',
  goalId: 'goalId',
  recordingDate: 'recordingDate',
  achievedValue: 'achievedValue',
  goalAchieved: 'goalAchieved',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryChapterScalarFieldEnum = {
  id: 'id',
  chapterId: 'chapterId',
  chapterName: 'chapterName',
  chapterDescription: 'chapterDescription',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  categoryName: 'categoryName',
  description: 'description',
  typeId: 'typeId',
  chapterId: 'chapterId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Valence = exports.$Enums.Valence = {
  positive: 'positive',
  negative: 'negative',
  neutre: 'neutre'
};

exports.Prisma.ModelName = {
  activity: 'activity',
  activityLog: 'activityLog',
  activityRegistration: 'activityRegistration',
  badge: 'badge',
  cognitiveExercise: 'cognitiveExercise',
  collaborativeProject: 'collaborativeProject',
  conversation: 'conversation',
  conversationParticipant: 'conversationParticipant',
  exerciseProgram: 'exerciseProgram',
  forumCategory: 'forumCategory',
  forumMessage: 'forumMessage',
  forumTopic: 'forumTopic',
  healthIndicator: 'healthIndicator',
  mood: 'mood',
  helpOffer: 'helpOffer',
  helpRequest: 'helpRequest',
  localService: 'localService',
  medicationReminder: 'medicationReminder',
  menuItem: 'menuItem',
  message: 'message',
  municipalEvent: 'municipalEvent',
  notification: 'notification',
  notificationPreferences: 'notificationPreferences',
  nutritionalAdvice: 'nutritionalAdvice',
  projectMember: 'projectMember',
  projectTask: 'projectTask',
  resource: 'resource',
  satisfactionSurvey: 'satisfactionSurvey',
  session: 'session',
  serviceCompleted: 'serviceCompleted',
  serviceRating: 'serviceRating',
  skill: 'skill',
  surveyResponse: 'surveyResponse',
  trustCircle: 'trustCircle',
  trustedContact: 'trustedContact',
  urbanIssueReport: 'urbanIssueReport',
  user: 'user',
  userActivity: 'userActivity',
  userBadge: 'userBadge',
  userContacts: 'userContacts',
  contactRequest: 'contactRequest',
  blockedContact: 'blockedContact',
  userDevice: 'userDevice',
  userPreferences: 'userPreferences',
  userInterest: 'userInterest',
  interest: 'interest',
  userSkill: 'userSkill',
  userStatistics: 'userStatistics',
  videoCall: 'videoCall',
  wellnessBadge: 'wellnessBadge',
  wellnessGoal: 'wellnessGoal',
  wellnessGoalProgress: 'wellnessGoalProgress',
  categoryType: 'categoryType',
  categoryChapter: 'categoryChapter',
  category: 'category'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/media/dominique/Development/E1N/Elderly/server/src/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/media/dominique/Development/E1N/Elderly/server/src/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel activity {\n  id                    String                 @id @default(cuid())\n  creatorId             String?                @map(\"creator_id\")\n  title                 String                 @db.Text\n  description           String?\n  startDate             DateTime               @map(\"start_date\") @db.Timestamp(6)\n  endDate               DateTime?              @map(\"end_date\") @db.Timestamp(6)\n  location              String?                @db.Text\n  gpsCoordinates        String?                @map(\"gps_coordinates\")\n  maxSpots              Int?                   @map(\"max_spots\")\n  categoryId            Int                    @map(\"category_id\")\n  recurring             Boolean?               @default(false)\n  frequency             String?                @db.Text\n  reducedMobilityAccess Boolean                @default(false) @map(\"reduced_mobility_access\")\n  difficultyLevel       Int?                   @map(\"difficulty_level\")\n  cost                  Float?\n  status                String?                @db.Text\n  weatherRequirements   String?                @map(\"weather_requirements\") @db.Text\n  transportOptions      String?                @map(\"transport_options\") @db.Text\n  createdAt             DateTime               @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt             DateTime?              @map(\"updated_at\") @db.Timestamp(6)\n  user                  user?                  @relation(fields: [creatorId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  activityRegistration  activityRegistration[]\n  category              category               @relation(fields: [categoryId], references: [id])\n}\n\nmodel activityLog {\n  id          String    @id @default(cuid())\n  userId      String?   @map(\"user_id\")\n  actionType  String?   @map(\"action_type\") @db.Text\n  description String?\n  ipAddress   String?   @map(\"ip_address\") @db.Text\n  device      String?   @db.Text\n  createdAt   DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt   DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user        user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"activity_log\")\n}\n\nmodel activityRegistration {\n  id                  String    @id @default(cuid())\n  activityId          String    @map(\"activity_id\")\n  userId              String    @map(\"user_id\")\n  registrationDate    DateTime  @map(\"registration_date\") @db.Timestamp(6)\n  status              String?   @db.Text\n  attendanceConfirmed Boolean?  @default(false) @map(\"attendance_confirmed\")\n  createdAt           DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt           DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  activity            activity  @relation(fields: [activityId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  user                user      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"activity_registration\")\n}\n\nmodel badge {\n  id          String     @id @default(cuid())\n  name        String     @db.Text\n  categoryId  Int        @unique @map(\"category_id\")\n  description String?    @db.Text\n  icon        String?    @db.Text\n  level       Int?\n  createdAt   DateTime   @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt   DateTime?  @map(\"updated_at\") @db.Timestamp(6)\n  userBadge   userBadge? @relation(fields: [userBadgeId], references: [id])\n  category    category   @relation(fields: [categoryId], references: [id])\n  userBadgeId String?\n}\n\nmodel cognitiveExercise {\n  id              String    @id @default(cuid())\n  name            String    @db.Text\n  categoryId      Int       @map(\"category_id\")\n  difficultyLevel Int?      @map(\"difficulty_level\")\n  durationMinutes Int?      @map(\"duration_minutes\")\n  description     String?\n  image           String?   @db.Text\n  createdAt       DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt       DateTime? @map(\"updated_at\") @db.Timestamp(6)\n\n  // Relation vers la catégorie générique\n  category     category?      @relation(fields: [categoryId], references: [id])\n  userActivity userActivity[]\n\n  @@map(\"cognitive_exercise\")\n}\n\nmodel collaborativeProject {\n  id           String    @id @default(cuid())\n  title        String    @db.Text\n  description  String?\n  creatorId    String    @map(\"creator_id\")\n  creationDate DateTime  @default(now()) @map(\"creation_date\") @db.Timestamp(6)\n  status       String?   @db.Text\n  categoryId   Int       @map(\"category_id\")\n  createdAt    DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt    DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user         user?     @relation(fields: [creatorId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  // Relation vers la catégorie générique\n  category category? @relation(fields: [categoryId], references: [id])\n\n  projectMember projectMember[]\n  projectTask   projectTask[]\n\n  @@map(\"collaborative_project\")\n}\n\nmodel conversation {\n  id                      String                    @id @default(cuid())\n  type                    String                    @db.Text\n  title                   String                    @db.Text\n  createdAt               DateTime                  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt               DateTime?                 @map(\"updated_at\") @db.Timestamp(6)\n  conversationParticipant conversationParticipant[]\n  message                 message[]\n  videoCall               videoCall[]\n}\n\nmodel conversationParticipant {\n  id             String       @id @default(cuid())\n  conversationId String       @map(\"conversation_id\")\n  userId         String       @map(\"user_id\")\n  dateAdded      DateTime?    @map(\"date_added\") @db.Timestamptz(6)\n  administrator  Boolean?\n  lastAccess     DateTime     @default(now()) @map(\"last_access\") @db.Timestamp(6)\n  createdAt      DateTime     @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt      DateTime?    @map(\"updated_at\") @db.Timestamp(6)\n  conversation   conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  user           user         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"conversation_participant\")\n}\n\nmodel exerciseProgram {\n  id                        String    @id @default(cuid())\n  name                      String    @db.Text\n  categoryId                Int       @map(\"category_id\")\n  difficultyLevel           Int?      @map(\"difficulty_level\")\n  adaptedForReducedMobility Boolean?  @map(\"adapted_for_reduced_mobility\")\n  durationMinutes           Int?      @map(\"duration_minutes\")\n  description               String?\n  videoLink                 String?   @map(\"video_link\") @db.Text\n  image                     String?   @db.Text\n  createdAt                 DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt                 DateTime? @map(\"updated_at\") @db.Timestamp(6)\n\n  // Relation vers la catégorie générique\n  category     category       @relation(fields: [categoryId], references: [id])\n  userActivity userActivity[]\n\n  @@map(\"exercise_program\")\n}\n\nmodel forumCategory {\n  id               String       @id @default(cuid())\n  name             String       @db.Text\n  description      String?      @db.Text\n  parentCategoryId String?      @map(\"parent_category_id\")\n  createdAt        DateTime     @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt        DateTime?    @map(\"updated_at\") @db.Timestamp(6)\n  forumTopic       forumTopic[]\n\n  @@map(\"forum_category\")\n}\n\nmodel forumMessage {\n  id              String      @id @default(cuid())\n  topicId         String      @map(\"topic_id\")\n  authorId        String      @map(\"author_id\")\n  content         String\n  solutionMessage Boolean?    @map(\"solution_message\")\n  createdAt       DateTime    @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt       DateTime?   @map(\"updated_at\") @db.Timestamp(6)\n  user            user?       @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  forumTopic      forumTopic? @relation(fields: [topicId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"forum_message\")\n}\n\nmodel forumTopic {\n  id            String         @id @default(cuid())\n  categoryId    String         @map(\"category_id\")\n  authorId      String         @map(\"author_id\")\n  title         String         @db.Text\n  pinned        Boolean?       @default(false)\n  status        String?        @db.Text\n  views         Int?           @default(0)\n  createdAt     DateTime       @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt     DateTime?      @map(\"updated_at\") @db.Timestamp(6)\n  forumMessage  forumMessage[]\n  user          user           @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  forumCategory forumCategory  @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"forum_topic\")\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel healthIndicator {\n  id                   String    @id @default(cuid())\n  userId               String    @map(\"user_id\")\n  recordingDate        DateTime  @map(\"recording_date\") @db.Date\n  stepCount            Int?      @map(\"step_count\")\n  sleepDurationMinutes Int?      @map(\"sleep_duration_minutes\")\n  sleepQuality         Int?      @map(\"sleep_quality\")\n  weight               Float?\n  moodId               Int?      @map(\"mood_category_id\")\n  notes                String?\n  createdAt            DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt            DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user                 user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  mood                 mood?     @relation(fields: [moodId], references: [id])\n\n  @@map(\"health_indicator\")\n}\n\n/// On met l'humeur ici car en liaison avec l'indicateur de santé\nmodel mood {\n  id              Int               @id @default(autoincrement())\n  name            String            @unique @default(\"\")\n  description     String?\n  valence         Valence\n  intensity       Int               @default(0) // Échelle de 1 à 5\n  color           String            @default(\"\") // Couleur associée (hex)\n  createdAt       DateTime          @default(now())\n  updatedAt       DateTime          @updatedAt\n  healthIndicator healthIndicator[]\n}\n\nenum Valence {\n  positive\n  negative\n  neutre\n}\n\nmodel helpOffer {\n  id          String      @id @default(cuid())\n  requestId   String      @map(\"request_id\")\n  helperId    String      @map(\"helper_id\")\n  offerDate   DateTime    @map(\"offer_date\") @db.Timestamp(6)\n  message     String?\n  status      String?     @db.Text\n  createdAt   DateTime    @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt   DateTime?   @map(\"updated_at\") @db.Timestamp(6)\n  user        user        @relation(fields: [helperId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  helpRequest helpRequest @relation(fields: [requestId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"help_offer\")\n}\n\nmodel helpRequest {\n  id                String             @id @default(cuid())\n  creatorId         String             @map(\"creator_id\")\n  title             String             @db.Text\n  description       String?\n  neededDate        DateTime           @map(\"needed_date\") @db.Timestamp(6)\n  estimatedDuration Int?               @map(\"estimated_duration\")\n  location          String?            @db.Text\n  gpsCoordinates    String?            @map(\"gps_coordinates\")\n  categoryId        Int                @map(\"category_id\")\n  recurring         Boolean?           @default(false)\n  frequency         String?            @db.Text\n  status            String?            @db.Text\n  pointsOffered     Int?               @default(0) @map(\"points_offered\")\n  createdAt         DateTime           @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt         DateTime?          @map(\"updated_at\") @db.Timestamp(6)\n  helpOffer         helpOffer[]\n  user              user               @relation(fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  serviceCompleted  serviceCompleted[]\n\n  // Relation vers la catégorie générique\n  category category @relation(fields: [categoryId], references: [id])\n\n  @@map(\"help_request\")\n}\n\nmodel localService {\n  id             String    @id @default(cuid())\n  name           String    @db.Text\n  categoryId     Int       @map(\"category_id\")\n  address        String?   @db.Text\n  gpsCoordinates String?   @map(\"gps_coordinates\")\n  phone          String?   @db.Text\n  website        String?   @db.Text\n  description    String?\n  hours          String?   @db.Text\n  seniorFriendly Boolean?  @map(\"senior_friendly\")\n  createdAt      DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt      DateTime? @map(\"updated_at\") @db.Timestamp(6)\n\n  // Relation vers la catégorie générique\n  category category @relation(fields: [categoryId], references: [id])\n\n  serviceRating serviceRating[]\n\n  @@map(\"local_service\")\n}\n\nmodel medicationReminder {\n  id                  String    @id @default(cuid())\n  userId              String    @map(\"user_id\")\n  medicationName      String    @map(\"medication_name\") @db.Text\n  dosage              String?   @db.Text\n  morningReminderTime DateTime? @map(\"morning_reminder_time\") @db.Time(6)\n  noonReminderTime    DateTime? @map(\"noon_reminder_time\") @db.Time(6)\n  eveningReminderTime DateTime? @map(\"evening_reminder_time\") @db.Time(6)\n  nightReminderTime   DateTime? @map(\"night_reminder_time\") @db.Time(6)\n  daysOfWeek          String?   @map(\"days_of_week\") @db.Text\n  instructions        String?\n  active              Boolean?  @default(true)\n  startDate           DateTime? @map(\"start_date\") @db.Timestamp(6)\n  endDate             DateTime? @map(\"end_date\") @db.Timestamp(6)\n  createdAt           DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt           DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user                user      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"medication_reminder\")\n}\n\nmodel menuItem {\n  id    String @id @default(cuid())\n  label String\n  key   String @default(\"undefined\")\n\n  @@map(\"menu_items\")\n}\n\nmodel message {\n  id             String        @id @default(cuid())\n  conversationId String        @map(\"conversation_id\")\n  senderId       String        @map(\"sender_id\")\n  content        String\n  sendDate       DateTime      @map(\"send_date\") @db.Timestamp(6)\n  type           String?       @db.Text\n  read           Boolean?      @default(false)\n  createdAt      DateTime      @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt      DateTime?     @map(\"updated_at\") @db.Timestamp(6)\n  conversation   conversation? @relation(fields: [conversationId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  user           user?         @relation(fields: [senderId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel municipalEvent {\n  id             String    @id @default(cuid())\n  title          String    @db.Text\n  description    String?\n  startDate      DateTime  @map(\"start_date\") @db.Timestamp(6)\n  endDate        DateTime  @map(\"end_date\") @db.Timestamp(6)\n  location       String    @db.Text\n  gpsCoordinates String?   @map(\"gps_coordinates\")\n  organizer      String?   @db.Text\n  contact        String?   @db.Text\n  officialLink   String?   @map(\"official_link\") @db.Text\n  createdAt      DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt      DateTime? @map(\"updated_at\") @db.Timestamp(6)\n\n  @@map(\"municipal_event\")\n}\n\nmodel notification {\n  id         String    @id @default(cuid())\n  userId     String    @map(\"user_id\")\n  type       String    @db.Text\n  content    String\n  read       Boolean?\n  actionLink String?   @map(\"action_link\") @db.Text\n  createdAt  DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt  DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user       user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel notificationPreferences {\n  userId               String    @id @map(\"user_id\")\n  messageNotification  Boolean?  @default(false) @map(\"message_notification\")\n  activityNotification Boolean?  @default(false) @map(\"activity_notification\")\n  helpNotification     Boolean?  @default(false) @map(\"help_notification\")\n  forumNotification    Boolean?  @default(false) @map(\"forum_notification\")\n  emailNotification    Boolean?  @default(false) @map(\"email_notification\")\n  smsNotification      Boolean?  @default(false) @map(\"sms_notification\")\n  pushNotification     Boolean?  @default(false) @map(\"push_notification\")\n  quietHoursStart      DateTime? @map(\"quiet_hours_start\") @db.Time(6)\n  quietHoursEnd        DateTime? @map(\"quiet_hours_end\") @db.Time(6)\n  createdAt            DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt            DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user                 user      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"notification_preferences\")\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel nutritionalAdvice {\n  id          String    @id @default(cuid())\n  title       String    @db.Text\n  description String?\n  categoryId  Int       @map(\"category_id\")\n  season      String?   @db.Text\n  image       String?   @db.Text\n  createdAt   DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt   DateTime? @map(\"updated_at\") @db.Timestamp(6)\n\n  // Relation vers la catégorie générique\n  category category @relation(fields: [categoryId], references: [id])\n\n  @@map(\"nutritional_advice\")\n}\n\nmodel projectMember {\n  id                   String               @id @default(cuid())\n  projectId            String               @map(\"project_id\")\n  userId               String               @map(\"user_id\")\n  role                 String               @db.Text\n  joinDate             DateTime             @map(\"join_date\") @db.Timestamp(6)\n  createdAt            DateTime             @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt            DateTime?            @map(\"updated_at\") @db.Timestamp(6)\n  collaborativeProject collaborativeProject @relation(fields: [projectId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  user                 user                 @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"project_member\")\n}\n\nmodel projectTask {\n  id                   String                @id @default(cuid())\n  projectId            String                @map(\"project_id\")\n  title                String                @db.Text\n  description          String?\n  creationDate         DateTime              @map(\"creation_date\") @db.Timestamp(6)\n  dueDate              DateTime?             @map(\"due_date\") @db.Timestamp(6)\n  status               String?               @db.Text\n  assigneeId           String?               @map(\"assignee_id\")\n  createdAt            DateTime              @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt            DateTime?             @map(\"updated_at\") @db.Timestamp(6)\n  user                 user?                 @relation(fields: [assigneeId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  collaborativeProject collaborativeProject? @relation(fields: [projectId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"project_task\")\n}\n\nmodel resource {\n  id             String    @id @default(cuid())\n  title          String    @db.Text\n  content        String?\n  type           String    @db.Text\n  categoryId     Int       @map(\"category_id\")\n  authorId       String    @map(\"author_id\")\n  adminValidated Boolean?  @default(false) @map(\"admin_validated\")\n  createdAt      DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt      DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user           user?     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  // Relation vers la catégorie générique\n  category category @relation(fields: [categoryId], references: [id])\n}\n\nmodel satisfactionSurvey {\n  id             String           @id @default(cuid())\n  title          String           @db.Text\n  description    String?\n  startDate      DateTime?        @map(\"start_date\") @db.Timestamp(6)\n  endDate        DateTime?        @map(\"end_date\") @db.Timestamp(6)\n  active         Boolean?         @default(false)\n  createdAt      DateTime         @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt      DateTime?        @map(\"updated_at\") @db.Timestamp(6)\n  surveyResponse surveyResponse[]\n\n  @@map(\"satisfaction_survey\")\n}\n\nmodel session {\n  id           String   @id @default(cuid())\n  refreshToken String   @unique\n  userId       String\n  user         user     @relation(fields: [userId], references: [id])\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  expiresAt    DateTime\n  userAgent    String?\n  ipAddress    String?\n\n  @@index([refreshToken])\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel serviceCompleted {\n  id              String      @id @default(cuid())\n  requestId       String      @map(\"request_id\")\n  helperId        String      @map(\"helper_id\")\n  completionDate  DateTime    @map(\"completion_date\") @db.Timestamp(6)\n  actualDuration  Int?        @map(\"actual_duration\")\n  creatorComment  String?     @map(\"creator_comment\")\n  helperComment   String?     @map(\"helper_comment\")\n  creatorRating   Int?        @map(\"creator_rating\")\n  helperRating    Int?        @map(\"helper_rating\")\n  pointsExchanged Int?        @map(\"points_exchanged\")\n  createdAt       DateTime    @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt       DateTime?   @map(\"updated_at\") @db.Timestamp(6)\n  user            user        @relation(fields: [helperId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  helpRequest     helpRequest @relation(fields: [requestId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"service_completed\")\n}\n\nmodel serviceRating {\n  id           String       @id @default(cuid())\n  serviceId    String       @map(\"service_id\")\n  userId       String       @map(\"user_id\")\n  rating       Int\n  comment      String?\n  ratingDate   DateTime?    @map(\"rating_date\") @db.Timestamp(6)\n  createdAt    DateTime     @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt    DateTime?    @map(\"updated_at\") @db.Timestamp(6)\n  localService localService @relation(fields: [serviceId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  user         user         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  // @@id([serviceId, userId])\n  @@map(\"service_rating\")\n}\n\nmodel skill {\n  id          String    @id @default(cuid())\n  name        String    @db.Text\n  description String?   @db.Text\n  categoryId  Int       @map(\"category_id\")\n  createdAt   DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt   DateTime? @map(\"updated_at\") @db.Timestamp(6)\n\n  // Relation vers la catégorie générique\n  category category @relation(fields: [categoryId], references: [id])\n\n  userSkill userSkill[]\n}\n\nmodel surveyResponse {\n  id                 String             @id @default(cuid())\n  surveyId           String             @map(\"survey_id\")\n  userId             String             @map(\"user_id\")\n  responses          Json?\n  responseDate       DateTime?          @default(now()) @db.Timestamp(6)\n  createdAt          DateTime           @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt          DateTime?          @map(\"updated_at\") @db.Timestamp(6)\n  satisfactionSurvey satisfactionSurvey @relation(fields: [surveyId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  user               user               @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"survey_response\")\n}\n\nmodel trustCircle {\n  id          String    @id @default(cuid())\n  userId      String    @map(\"user_id\")\n  contactId   String    @map(\"contact_id\")\n  dateAdded   DateTime  @map(\"date_added\") @db.Date\n  accessLevel String    @map(\"access_level\") @db.Text\n  createdAt   DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt   DateTime? @map(\"updated_at\") @db.Timestamp(6)\n\n  @@map(\"trust_circle\")\n}\n\nmodel trustedContact {\n  id                      String    @id @default(cuid())\n  userId                  String    @map(\"user_id\")\n  firstName               String    @map(\"first_name\") @db.Text\n  lastName                String    @map(\"last_name\") @db.Text\n  email                   String?   @unique @db.Text\n  phone                   String    @db.Text\n  relationship            String?   @db.Text\n  shareMedications        Boolean   @default(false) @map(\"share_medications\")\n  shareHealthIndicators   Boolean   @default(false) @map(\"share_health_indicators\")\n  shareWellnessActivities Boolean   @default(false) @map(\"share_wellness_activities\")\n  emergencyAlerts         Boolean   @default(false) @map(\"emergency_alerts\")\n  createdAt               DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt               DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user                    user      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"trusted_contact\")\n}\n\nmodel urbanIssueReport {\n  id             String    @id @default(cuid())\n  userId         String    @map(\"user_id\")\n  categoryId     Int       @map(\"category_id\")\n  description    String\n  address        String    @db.Text\n  gpsCoordinates String?   @map(\"gps_coordinates\")\n  reportDate     DateTime  @map(\"report_date\") @db.Timestamp(6)\n  status         String?   @db.Text\n  cityReference  String?   @map(\"city_reference\") @db.Text\n  createdAt      DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt      DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user           user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  // Relation vers la catégorie générique\n  category       category  @relation(fields: [categoryId], references: [id])\n\n  @@map(\"urban_issue_report\")\n}\n\nmodel user {\n  id                      String                    @id @default(cuid())\n  email                   String                    @unique @db.Text\n  passwordHash            String                    @map(\"password_hash\") @db.Text\n  firstName               String?                   @map(\"first_name\") @db.Text\n  lastName                String?                   @map(\"last_name\") @db.Text\n  birthDate               DateTime?                 @map(\"birth_date\") @db.Date\n  profession              String?                   @db.Text\n  city                    String?                   @db.Text\n  postalCode              String?                   @map(\"postal_code\") @db.Text\n  address                 String?                   @db.Text\n  description             String?                   @db.Text\n  latitude                String?                   @map(\"latitude\")\n  longitude               String?                   @map(\"longitude\")\n  phone                   String?                   @db.Text\n  avatar                  String?                   @map(\"avatar\") @db.Text\n  registrationDate        DateTime                  @default(now()) @map(\"registration_date\") @db.Timestamp(6)\n  helpPoints              Int?                      @default(0) @map(\"help_points\")\n  reducedMobility         Boolean?                  @default(false) @map(\"reduced_mobility\")\n  status                  String?                   @default(\"active\") @db.Text\n  isAdmin                 Boolean?                  @default(false) @map(\"is_admin\")\n  createdAt               DateTime                  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt               DateTime?                 @map(\"updated_at\") @db.Timestamp(6)\n  activity                activity[]\n  activityLog             activityLog[]\n  activityRegistration    activityRegistration[]\n  blockedContact          blockedContact[]\n  collaborativeProject    collaborativeProject[]\n  contactRequest          contactRequest[]\n  conversationParticipant conversationParticipant[]\n  forumMessage            forumMessage[]\n  forumTopic              forumTopic[]\n  healthIndicator         healthIndicator[]\n  helpOffer               helpOffer[]\n  helpRequest             helpRequest[]\n  medicationReminder      medicationReminder[]\n  message                 message[]\n  notification            notification[]\n  notificationPreferences notificationPreferences?\n  projectMember           projectMember[]\n  projectTask             projectTask[]\n  resource                resource[]\n  serviceCompleted        serviceCompleted[]\n  serviceRating           serviceRating[]\n  surveyResponse          surveyResponse[]\n  trustedContact          trustedContact[]\n  urbanIssueReport        urbanIssueReport[]\n  userActivity            userActivity[]\n  userBadge               userBadge[]\n  userContacts            userContacts[]\n  userInterest            userInterest[]\n  userDevice              userDevice[]\n  userPreferences         userPreferences[]\n  userSkill               userSkill[]\n  userStatistics          userStatistics?\n  videoCall               videoCall[]\n  wellnessGoal            wellnessGoal[]\n  session                 session[]\n}\n\nmodel userActivity {\n  id                       String             @id @default(cuid())\n  userId                   String             @map(\"user_id\")\n  completionDate           DateTime           @map(\"completion_date\") @db.Date\n  exerciseProgramId        String?            @map(\"exercise_program_id\")\n  cognitiveExerciseId      String?            @map(\"cognitive_exercise_id\")\n  durationMinutes          Int?               @map(\"duration_minutes\")\n  perceivedDifficultyLevel Int?               @map(\"perceived_difficulty_level\")\n  enjoymentLevel           Int?               @map(\"enjoyment_level\")\n  comment                  String?\n  createdAt                DateTime           @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt                DateTime?          @map(\"updated_at\") @db.Timestamp(6)\n  cognitiveExercise        cognitiveExercise? @relation(fields: [cognitiveExerciseId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  exerciseProgram          exerciseProgram?   @relation(fields: [exerciseProgramId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  user                     user               @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"user_activity\")\n}\n\nmodel userBadge {\n  id              String    @id @default(cuid())\n  userId          String    @map(\"user_id\")\n  badgeId         String    @map(\"badge_id\")\n  achievementDate DateTime  @map(\"achievement_date\") @db.Timestamp(6)\n  createdAt       DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt       DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  badge           badge[]\n  user            user      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"user_badge\")\n}\n\nmodel userContacts {\n  id        String    @id @default(cuid())\n  userId    String    @map(\"user_id\")\n  contactId String    @map(\"contact_id\")\n  createdAt DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user      user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"user_contacts\")\n}\n\nmodel contactRequest {\n  id        String    @id @default(cuid())\n  userId    String    @map(\"user_id\")\n  contactId String    @map(\"contact_id\")\n  status    String    @default(\"pending\") @db.Text\n  message   String?   @db.Text\n  createdAt DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user      user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"contact_request\")\n}\n\nmodel blockedContact {\n  id        String    @id @default(cuid())\n  userId    String    @map(\"user_id\")\n  contactId String    @map(\"contact_id\")\n  reason    String?   @db.Text\n  createdAt DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user      user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"blocked_contact\")\n}\n\nmodel userDevice {\n  id                String    @id @default(cuid())\n  userId            String    @map(\"user_id\")\n  deviceType        String    @map(\"device_type\") @db.Text\n  deviceName        String?   @map(\"device_name\") @db.Text\n  operatingSystem   String?   @map(\"operating_system\") @db.Text\n  notificationToken String    @map(\"notification_token\") @db.Text\n  lastConnection    DateTime  @map(\"last_connection\") @db.Timestamp(6)\n  createdAt         DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt         DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user              user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"user_device\")\n}\n\nmodel userPreferences {\n  id                        String    @id @default(cuid())\n  userId                    String    @map(\"user_id\")\n  notificationMessages      Boolean?  @default(true) @map(\"notification_messages\")\n  notificationForum         Boolean?  @default(true) @map(\"notification_forum\")\n  notificationActivities    Boolean?  @default(true) @map(\"notification_activities\")\n  emailUpdates              Boolean?  @default(true) @map(\"email_updates\")\n  smsUpdates                Boolean?  @default(false) @map(\"sms_updates\")\n  frequencyInstant          Boolean   @default(true) @map(\"frequency_instant\")\n  frequencyDaily            Boolean?  @default(false) @map(\"frequency_daily\")\n  fontSize                  String?   @default(\"normal\") @map(\"font_size\") @db.Text\n  highContrast              Boolean?  @default(false) @map(\"high_contrast\")\n  statusVisibilityEverybody Boolean?  @default(true) @map(\"status_visibility_everybody\")\n  statusVisibilityFriends   Boolean?  @default(true) @map(\"status_visibility_friends\")\n  statusVisibilityNoOne     Boolean?  @default(false) @map(\"status_visibility_no_one\")\n  messagesFromEverybody     Boolean?  @default(true) @map(\"messages_from_everybody\")\n  messagesFromFriends       Boolean?  @default(true) @map(\"messages_from_friends\")\n  messagesFromNoOne         Boolean?  @default(false) @map(\"messages_from_no_one\")\n  dataSharing               Boolean?  @default(false) @map(\"data_sharing\")\n  createdAt                 DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt                 DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user                      user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"user_preferences\")\n}\n\nmodel userInterest {\n  id         String     @id @default(cuid())\n  userId     String     @map(\"user_id\")\n  interestId String     @map(\"interest_id\")\n  createdAt  DateTime   @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt  DateTime?  @map(\"updated_at\") @db.Timestamp(6)\n  user       user       @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  interest   interest[]\n\n  @@map(\"user_interest\")\n}\n\nmodel interest {\n  id          String    @id @default(cuid())\n  name        String    @db.Text\n  description String?   @db.Text\n  createdAt   DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt   DateTime? @map(\"updated_at\") @db.Timestamp(6)\n\n  userInterest userInterest[]\n}\n\nmodel userSkill {\n  id        String    @id @default(cuid())\n  userId    String    @map(\"user_id\")\n  skillId   String    @map(\"skill_id\")\n  level     Int?\n  createdAt DateTime  @default(now()) @db.Timestamp(6)\n  updatedAt DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  skill     skill     @relation(fields: [skillId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  user      user      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"user_skill\")\n}\n\nmodel userStatistics {\n  userId                 String    @id @map(\"user_id\")\n  servicesProvided       Int?      @map(\"services_provided\")\n  servicesReceived       Int?      @map(\"services_received\")\n  activitiesParticipated Int?      @map(\"activities_participated\")\n  activitiesOrganized    Int?      @map(\"activities_organized\")\n  forumMessages          Int?      @map(\"forum_messages\")\n  totalHelpPoints        Int?      @map(\"total_help_points\")\n  networkSize            Int?      @map(\"network_size\")\n  createdAt              DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt              DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  user                   user      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"user_statistics\")\n}\n\nmodel videoCall {\n  id             String        @id @default(cuid())\n  conversationId String        @map(\"conversation_id\")\n  initiatorId    String        @map(\"initiator_id\")\n  startDate      DateTime      @map(\"start_date\") @db.Timestamp(6)\n  endDate        DateTime      @map(\"end_date\") @db.Timestamp(6)\n  status         String        @db.Text\n  createdAt      DateTime      @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt      DateTime?     @map(\"updated_at\") @db.Timestamp(6)\n  conversation   conversation? @relation(fields: [conversationId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  user           user?         @relation(fields: [initiatorId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"video_call\")\n}\n\nmodel wellnessBadge {\n  id          String    @id @default(cuid())\n  name        String    @db.Text\n  description String?\n  categoryId  Int       @map(\"category_id\")\n  image       String?   @db.Text\n  level       Int\n  createdAt   DateTime  @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt   DateTime? @map(\"updated_at\") @db.Timestamp(6)\n  category    category  @relation(fields: [categoryId], references: [id]) // <- ICI on pointe vers Category\n\n  @@map(\"wellness_badge\")\n}\n\nmodel wellnessGoal {\n  id                   String                 @id @default(cuid())\n  userId               String                 @map(\"user_id\")\n  title                String                 @db.Text\n  categoryId           Int                    @map(\"category_id\")\n  targetValue          Int                    @map(\"target_value\")\n  unit                 String                 @db.Text\n  frequency            String                 @db.Text\n  startDate            DateTime               @map(\"start_date\") @db.Date\n  endDate              DateTime               @map(\"end_date\") @db.Date\n  active               Boolean                @default(false)\n  createdAt            DateTime               @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt            DateTime?              @map(\"updated_at\") @db.Timestamp(6)\n  wellnessGoalProgress wellnessGoalProgress[]\n  user                 user?                  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  category             category               @relation(fields: [categoryId], references: [id]) // <- ICI on pointe vers Category\n\n  @@map(\"wellness_goal\")\n}\n\nmodel wellnessGoalProgress {\n  id            String       @id @default(cuid())\n  goalId        String       @map(\"goal_id\")\n  recordingDate DateTime     @map(\"recording_date\") @db.Date\n  achievedValue Int          @map(\"achieved_value\")\n  goalAchieved  Boolean      @default(false) @map(\"goal_achieved\")\n  createdAt     DateTime     @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt     DateTime?    @map(\"updated_at\") @db.Timestamp(6)\n  wellnessGoal  wellnessGoal @relation(fields: [goalId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"wellness_goal_progress\")\n}\n\nmodel categoryType {\n  id         Int        @id @default(autoincrement())\n  name       String     @unique\n  categories category[]\n  createdAt  DateTime   @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt  DateTime?  @map(\"updated_at\") @db.Timestamp(6)\n\n  @@index([name])\n  @@map(\"category_type\")\n}\n\nmodel categoryChapter {\n  id                 Int        @id @default(autoincrement())\n  chapterId          Int        @unique @map(\"chapter_id\")\n  chapterName        String     @unique @map(\"chapter_name\")\n  chapterDescription String?    @map(\"chapter_description\")\n  category           category[]\n  createdAt          DateTime   @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt          DateTime?  @map(\"updated_at\") @db.Timestamp(6)\n\n  @@index([chapterName])\n  @@map(\"category_chapter\")\n}\n\nmodel category {\n  id                   Int                    @id @default(autoincrement())\n  categoryName         String                 @map(\"category_name\")\n  description          String?\n  typeId               Int                    @map(\"type_id\")\n  chapterId            Int                    @map(\"chapter_id\")\n  createdAt            DateTime               @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt            DateTime?              @map(\"updated_at\") @db.Timestamp(6)\n  activity             activity[]\n  badge                badge[]\n  cognitiveExercise    cognitiveExercise[]\n  collaborativeProject collaborativeProject[]\n  exerciseProgram      exerciseProgram[]\n  helpRequest          helpRequest[]\n  localService         localService[]\n  nutritionalAdvice    nutritionalAdvice[]\n  resource             resource[]\n  skill                skill[]\n  urbanIssueReport     urbanIssueReport[]\n  wellnessBadge        wellnessBadge[]\n  wellnessGoal         wellnessGoal[]\n  categoryType         categoryType           @relation(fields: [typeId], references: [id])\n  categoryChapter      categoryChapter        @relation(fields: [chapterId], references: [chapterId])\n}\n",
  "inlineSchemaHash": "65df9416358bbfe973c2a7f1292219a889fce5efe0a6bf52159c071c86687b94",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"activity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"creator_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gpsCoordinates\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"gps_coordinates\"},{\"name\":\"maxSpots\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_spots\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"recurring\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reducedMobilityAccess\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"reduced_mobility_access\"},{\"name\":\"difficultyLevel\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"difficulty_level\"},{\"name\":\"cost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weatherRequirements\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"weather_requirements\"},{\"name\":\"transportOptions\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"transport_options\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"activityTouser\"},{\"name\":\"activityRegistration\",\"kind\":\"object\",\"type\":\"activityRegistration\",\"relationName\":\"activityToactivityRegistration\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"activityTocategory\"}],\"dbName\":null},\"activityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"actionType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"action_type\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"device\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"activityLogTouser\"}],\"dbName\":\"activity_log\"},\"activityRegistration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"activity_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"registrationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"registration_date\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attendanceConfirmed\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"attendance_confirmed\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"activity\",\"kind\":\"object\",\"type\":\"activity\",\"relationName\":\"activityToactivityRegistration\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"activityRegistrationTouser\"}],\"dbName\":\"activity_registration\"},\"badge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"userBadge\",\"kind\":\"object\",\"type\":\"userBadge\",\"relationName\":\"badgeTouserBadge\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"badgeTocategory\"},{\"name\":\"userBadgeId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"cognitiveExercise\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"difficultyLevel\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"difficulty_level\"},{\"name\":\"durationMinutes\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"duration_minutes\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTocognitiveExercise\"},{\"name\":\"userActivity\",\"kind\":\"object\",\"type\":\"userActivity\",\"relationName\":\"cognitiveExerciseTouserActivity\"}],\"dbName\":\"cognitive_exercise\"},\"collaborativeProject\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"creator_id\"},{\"name\":\"creationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"creation_date\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"collaborativeProjectTouser\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTocollaborativeProject\"},{\"name\":\"projectMember\",\"kind\":\"object\",\"type\":\"projectMember\",\"relationName\":\"collaborativeProjectToprojectMember\"},{\"name\":\"projectTask\",\"kind\":\"object\",\"type\":\"projectTask\",\"relationName\":\"collaborativeProjectToprojectTask\"}],\"dbName\":\"collaborative_project\"},\"conversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"conversationParticipant\",\"kind\":\"object\",\"type\":\"conversationParticipant\",\"relationName\":\"conversationToconversationParticipant\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"message\",\"relationName\":\"conversationTomessage\"},{\"name\":\"videoCall\",\"kind\":\"object\",\"type\":\"videoCall\",\"relationName\":\"conversationTovideoCall\"}],\"dbName\":null},\"conversationParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"conversation_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"dateAdded\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_added\"},{\"name\":\"administrator\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastAccess\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_access\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"conversation\",\"relationName\":\"conversationToconversationParticipant\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"conversationParticipantTouser\"}],\"dbName\":\"conversation_participant\"},\"exerciseProgram\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"difficultyLevel\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"difficulty_level\"},{\"name\":\"adaptedForReducedMobility\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"adapted_for_reduced_mobility\"},{\"name\":\"durationMinutes\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"duration_minutes\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"videoLink\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"video_link\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryToexerciseProgram\"},{\"name\":\"userActivity\",\"kind\":\"object\",\"type\":\"userActivity\",\"relationName\":\"exerciseProgramTouserActivity\"}],\"dbName\":\"exercise_program\"},\"forumCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentCategoryId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"parent_category_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"forumTopic\",\"kind\":\"object\",\"type\":\"forumTopic\",\"relationName\":\"forumCategoryToforumTopic\"}],\"dbName\":\"forum_category\"},\"forumMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"topicId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"topic_id\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"author_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"solutionMessage\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"solution_message\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"forumMessageTouser\"},{\"name\":\"forumTopic\",\"kind\":\"object\",\"type\":\"forumTopic\",\"relationName\":\"forumMessageToforumTopic\"}],\"dbName\":\"forum_message\"},\"forumTopic\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"category_id\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"author_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pinned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"forumMessage\",\"kind\":\"object\",\"type\":\"forumMessage\",\"relationName\":\"forumMessageToforumTopic\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"forumTopicTouser\"},{\"name\":\"forumCategory\",\"kind\":\"object\",\"type\":\"forumCategory\",\"relationName\":\"forumCategoryToforumTopic\"}],\"dbName\":\"forum_topic\"},\"healthIndicator\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"recordingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"recording_date\"},{\"name\":\"stepCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"step_count\"},{\"name\":\"sleepDurationMinutes\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"sleep_duration_minutes\"},{\"name\":\"sleepQuality\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"sleep_quality\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"moodId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"mood_category_id\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"healthIndicatorTouser\"},{\"name\":\"mood\",\"kind\":\"object\",\"type\":\"mood\",\"relationName\":\"healthIndicatorTomood\"}],\"dbName\":\"health_indicator\"},\"mood\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"valence\",\"kind\":\"enum\",\"type\":\"Valence\"},{\"name\":\"intensity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"healthIndicator\",\"kind\":\"object\",\"type\":\"healthIndicator\",\"relationName\":\"healthIndicatorTomood\"}],\"dbName\":null},\"helpOffer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"request_id\"},{\"name\":\"helperId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"helper_id\"},{\"name\":\"offerDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"offer_date\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"helpOfferTouser\"},{\"name\":\"helpRequest\",\"kind\":\"object\",\"type\":\"helpRequest\",\"relationName\":\"helpOfferTohelpRequest\"}],\"dbName\":\"help_offer\"},\"helpRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"creator_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"neededDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"needed_date\"},{\"name\":\"estimatedDuration\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"estimated_duration\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gpsCoordinates\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"gps_coordinates\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"recurring\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pointsOffered\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"points_offered\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"helpOffer\",\"kind\":\"object\",\"type\":\"helpOffer\",\"relationName\":\"helpOfferTohelpRequest\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"helpRequestTouser\"},{\"name\":\"serviceCompleted\",\"kind\":\"object\",\"type\":\"serviceCompleted\",\"relationName\":\"helpRequestToserviceCompleted\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTohelpRequest\"}],\"dbName\":\"help_request\"},\"localService\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gpsCoordinates\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"gps_coordinates\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hours\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seniorFriendly\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"senior_friendly\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTolocalService\"},{\"name\":\"serviceRating\",\"kind\":\"object\",\"type\":\"serviceRating\",\"relationName\":\"localServiceToserviceRating\"}],\"dbName\":\"local_service\"},\"medicationReminder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"medicationName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"medication_name\"},{\"name\":\"dosage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"morningReminderTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"morning_reminder_time\"},{\"name\":\"noonReminderTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"noon_reminder_time\"},{\"name\":\"eveningReminderTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"evening_reminder_time\"},{\"name\":\"nightReminderTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"night_reminder_time\"},{\"name\":\"daysOfWeek\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"days_of_week\"},{\"name\":\"instructions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"medicationReminderTouser\"}],\"dbName\":\"medication_reminder\"},\"menuItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"menu_items\"},\"message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"conversation_id\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sendDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"send_date\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"conversation\",\"relationName\":\"conversationTomessage\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"messageTouser\"}],\"dbName\":null},\"municipalEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gpsCoordinates\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"gps_coordinates\"},{\"name\":\"organizer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"officialLink\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"official_link\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"municipal_event\"},\"notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"actionLink\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"action_link\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"notificationTouser\"}],\"dbName\":null},\"notificationPreferences\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"messageNotification\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"message_notification\"},{\"name\":\"activityNotification\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"activity_notification\"},{\"name\":\"helpNotification\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"help_notification\"},{\"name\":\"forumNotification\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"forum_notification\"},{\"name\":\"emailNotification\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"email_notification\"},{\"name\":\"smsNotification\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"sms_notification\"},{\"name\":\"pushNotification\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"push_notification\"},{\"name\":\"quietHoursStart\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"quiet_hours_start\"},{\"name\":\"quietHoursEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"quiet_hours_end\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"notificationPreferencesTouser\"}],\"dbName\":\"notification_preferences\"},\"nutritionalAdvice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"season\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTonutritionalAdvice\"}],\"dbName\":\"nutritional_advice\"},\"projectMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"join_date\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"collaborativeProject\",\"kind\":\"object\",\"type\":\"collaborativeProject\",\"relationName\":\"collaborativeProjectToprojectMember\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"projectMemberTouser\"}],\"dbName\":\"project_member\"},\"projectTask\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"creation_date\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"due_date\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assigneeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"assignee_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"projectTaskTouser\"},{\"name\":\"collaborativeProject\",\"kind\":\"object\",\"type\":\"collaborativeProject\",\"relationName\":\"collaborativeProjectToprojectTask\"}],\"dbName\":\"project_task\"},\"resource\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"author_id\"},{\"name\":\"adminValidated\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"admin_validated\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"resourceTouser\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryToresource\"}],\"dbName\":null},\"satisfactionSurvey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"surveyResponse\",\"kind\":\"object\",\"type\":\"surveyResponse\",\"relationName\":\"satisfactionSurveyTosurveyResponse\"}],\"dbName\":\"satisfaction_survey\"},\"session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"sessionTouser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"serviceCompleted\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"request_id\"},{\"name\":\"helperId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"helper_id\"},{\"name\":\"completionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completion_date\"},{\"name\":\"actualDuration\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"actual_duration\"},{\"name\":\"creatorComment\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"creator_comment\"},{\"name\":\"helperComment\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"helper_comment\"},{\"name\":\"creatorRating\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"creator_rating\"},{\"name\":\"helperRating\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"helper_rating\"},{\"name\":\"pointsExchanged\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"points_exchanged\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"serviceCompletedTouser\"},{\"name\":\"helpRequest\",\"kind\":\"object\",\"type\":\"helpRequest\",\"relationName\":\"helpRequestToserviceCompleted\"}],\"dbName\":\"service_completed\"},\"serviceRating\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"service_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ratingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"rating_date\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"localService\",\"kind\":\"object\",\"type\":\"localService\",\"relationName\":\"localServiceToserviceRating\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"serviceRatingTouser\"}],\"dbName\":\"service_rating\"},\"skill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryToskill\"},{\"name\":\"userSkill\",\"kind\":\"object\",\"type\":\"userSkill\",\"relationName\":\"skillTouserSkill\"}],\"dbName\":null},\"surveyResponse\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"surveyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"survey_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"responses\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"responseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"satisfactionSurvey\",\"kind\":\"object\",\"type\":\"satisfactionSurvey\",\"relationName\":\"satisfactionSurveyTosurveyResponse\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"surveyResponseTouser\"}],\"dbName\":\"survey_response\"},\"trustCircle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_id\"},{\"name\":\"dateAdded\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_added\"},{\"name\":\"accessLevel\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"access_level\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"trust_circle\"},\"trustedContact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relationship\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shareMedications\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"share_medications\"},{\"name\":\"shareHealthIndicators\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"share_health_indicators\"},{\"name\":\"shareWellnessActivities\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"share_wellness_activities\"},{\"name\":\"emergencyAlerts\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"emergency_alerts\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"trustedContactTouser\"}],\"dbName\":\"trusted_contact\"},\"urbanIssueReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gpsCoordinates\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"gps_coordinates\"},{\"name\":\"reportDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"report_date\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cityReference\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"city_reference\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"urbanIssueReportTouser\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTourbanIssueReport\"}],\"dbName\":\"urban_issue_report\"},\"user\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"birth_date\"},{\"name\":\"profession\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"postal_code\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"latitude\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"longitude\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"avatar\"},{\"name\":\"registrationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"registration_date\"},{\"name\":\"helpPoints\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"help_points\"},{\"name\":\"reducedMobility\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"reduced_mobility\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_admin\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"activity\",\"kind\":\"object\",\"type\":\"activity\",\"relationName\":\"activityTouser\"},{\"name\":\"activityLog\",\"kind\":\"object\",\"type\":\"activityLog\",\"relationName\":\"activityLogTouser\"},{\"name\":\"activityRegistration\",\"kind\":\"object\",\"type\":\"activityRegistration\",\"relationName\":\"activityRegistrationTouser\"},{\"name\":\"blockedContact\",\"kind\":\"object\",\"type\":\"blockedContact\",\"relationName\":\"blockedContactTouser\"},{\"name\":\"collaborativeProject\",\"kind\":\"object\",\"type\":\"collaborativeProject\",\"relationName\":\"collaborativeProjectTouser\"},{\"name\":\"contactRequest\",\"kind\":\"object\",\"type\":\"contactRequest\",\"relationName\":\"contactRequestTouser\"},{\"name\":\"conversationParticipant\",\"kind\":\"object\",\"type\":\"conversationParticipant\",\"relationName\":\"conversationParticipantTouser\"},{\"name\":\"forumMessage\",\"kind\":\"object\",\"type\":\"forumMessage\",\"relationName\":\"forumMessageTouser\"},{\"name\":\"forumTopic\",\"kind\":\"object\",\"type\":\"forumTopic\",\"relationName\":\"forumTopicTouser\"},{\"name\":\"healthIndicator\",\"kind\":\"object\",\"type\":\"healthIndicator\",\"relationName\":\"healthIndicatorTouser\"},{\"name\":\"helpOffer\",\"kind\":\"object\",\"type\":\"helpOffer\",\"relationName\":\"helpOfferTouser\"},{\"name\":\"helpRequest\",\"kind\":\"object\",\"type\":\"helpRequest\",\"relationName\":\"helpRequestTouser\"},{\"name\":\"medicationReminder\",\"kind\":\"object\",\"type\":\"medicationReminder\",\"relationName\":\"medicationReminderTouser\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"message\",\"relationName\":\"messageTouser\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"notificationTouser\"},{\"name\":\"notificationPreferences\",\"kind\":\"object\",\"type\":\"notificationPreferences\",\"relationName\":\"notificationPreferencesTouser\"},{\"name\":\"projectMember\",\"kind\":\"object\",\"type\":\"projectMember\",\"relationName\":\"projectMemberTouser\"},{\"name\":\"projectTask\",\"kind\":\"object\",\"type\":\"projectTask\",\"relationName\":\"projectTaskTouser\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"resource\",\"relationName\":\"resourceTouser\"},{\"name\":\"serviceCompleted\",\"kind\":\"object\",\"type\":\"serviceCompleted\",\"relationName\":\"serviceCompletedTouser\"},{\"name\":\"serviceRating\",\"kind\":\"object\",\"type\":\"serviceRating\",\"relationName\":\"serviceRatingTouser\"},{\"name\":\"surveyResponse\",\"kind\":\"object\",\"type\":\"surveyResponse\",\"relationName\":\"surveyResponseTouser\"},{\"name\":\"trustedContact\",\"kind\":\"object\",\"type\":\"trustedContact\",\"relationName\":\"trustedContactTouser\"},{\"name\":\"urbanIssueReport\",\"kind\":\"object\",\"type\":\"urbanIssueReport\",\"relationName\":\"urbanIssueReportTouser\"},{\"name\":\"userActivity\",\"kind\":\"object\",\"type\":\"userActivity\",\"relationName\":\"userTouserActivity\"},{\"name\":\"userBadge\",\"kind\":\"object\",\"type\":\"userBadge\",\"relationName\":\"userTouserBadge\"},{\"name\":\"userContacts\",\"kind\":\"object\",\"type\":\"userContacts\",\"relationName\":\"userTouserContacts\"},{\"name\":\"userInterest\",\"kind\":\"object\",\"type\":\"userInterest\",\"relationName\":\"userTouserInterest\"},{\"name\":\"userDevice\",\"kind\":\"object\",\"type\":\"userDevice\",\"relationName\":\"userTouserDevice\"},{\"name\":\"userPreferences\",\"kind\":\"object\",\"type\":\"userPreferences\",\"relationName\":\"userTouserPreferences\"},{\"name\":\"userSkill\",\"kind\":\"object\",\"type\":\"userSkill\",\"relationName\":\"userTouserSkill\"},{\"name\":\"userStatistics\",\"kind\":\"object\",\"type\":\"userStatistics\",\"relationName\":\"userTouserStatistics\"},{\"name\":\"videoCall\",\"kind\":\"object\",\"type\":\"videoCall\",\"relationName\":\"userTovideoCall\"},{\"name\":\"wellnessGoal\",\"kind\":\"object\",\"type\":\"wellnessGoal\",\"relationName\":\"userTowellnessGoal\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"session\",\"relationName\":\"sessionTouser\"}],\"dbName\":null},\"userActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"completionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completion_date\"},{\"name\":\"exerciseProgramId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"exercise_program_id\"},{\"name\":\"cognitiveExerciseId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"cognitive_exercise_id\"},{\"name\":\"durationMinutes\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"duration_minutes\"},{\"name\":\"perceivedDifficultyLevel\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"perceived_difficulty_level\"},{\"name\":\"enjoymentLevel\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"enjoyment_level\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"cognitiveExercise\",\"kind\":\"object\",\"type\":\"cognitiveExercise\",\"relationName\":\"cognitiveExerciseTouserActivity\"},{\"name\":\"exerciseProgram\",\"kind\":\"object\",\"type\":\"exerciseProgram\",\"relationName\":\"exerciseProgramTouserActivity\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouserActivity\"}],\"dbName\":\"user_activity\"},\"userBadge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"badgeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"badge_id\"},{\"name\":\"achievementDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"achievement_date\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"badge\",\"kind\":\"object\",\"type\":\"badge\",\"relationName\":\"badgeTouserBadge\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouserBadge\"}],\"dbName\":\"user_badge\"},\"userContacts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouserContacts\"}],\"dbName\":\"user_contacts\"},\"contactRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_id\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"contactRequestTouser\"}],\"dbName\":\"contact_request\"},\"blockedContact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contact_id\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"blockedContactTouser\"}],\"dbName\":\"blocked_contact\"},\"userDevice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"deviceType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"device_type\"},{\"name\":\"deviceName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"device_name\"},{\"name\":\"operatingSystem\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"operating_system\"},{\"name\":\"notificationToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"notification_token\"},{\"name\":\"lastConnection\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_connection\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouserDevice\"}],\"dbName\":\"user_device\"},\"userPreferences\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"notificationMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"notification_messages\"},{\"name\":\"notificationForum\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"notification_forum\"},{\"name\":\"notificationActivities\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"notification_activities\"},{\"name\":\"emailUpdates\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"email_updates\"},{\"name\":\"smsUpdates\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"sms_updates\"},{\"name\":\"frequencyInstant\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"frequency_instant\"},{\"name\":\"frequencyDaily\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"frequency_daily\"},{\"name\":\"fontSize\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"font_size\"},{\"name\":\"highContrast\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"high_contrast\"},{\"name\":\"statusVisibilityEverybody\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"status_visibility_everybody\"},{\"name\":\"statusVisibilityFriends\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"status_visibility_friends\"},{\"name\":\"statusVisibilityNoOne\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"status_visibility_no_one\"},{\"name\":\"messagesFromEverybody\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"messages_from_everybody\"},{\"name\":\"messagesFromFriends\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"messages_from_friends\"},{\"name\":\"messagesFromNoOne\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"messages_from_no_one\"},{\"name\":\"dataSharing\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"data_sharing\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouserPreferences\"}],\"dbName\":\"user_preferences\"},\"userInterest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"interestId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"interest_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouserInterest\"},{\"name\":\"interest\",\"kind\":\"object\",\"type\":\"interest\",\"relationName\":\"interestTouserInterest\"}],\"dbName\":\"user_interest\"},\"interest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"userInterest\",\"kind\":\"object\",\"type\":\"userInterest\",\"relationName\":\"interestTouserInterest\"}],\"dbName\":null},\"userSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"skill_id\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"skill\",\"relationName\":\"skillTouserSkill\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouserSkill\"}],\"dbName\":\"user_skill\"},\"userStatistics\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"servicesProvided\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"services_provided\"},{\"name\":\"servicesReceived\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"services_received\"},{\"name\":\"activitiesParticipated\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"activities_participated\"},{\"name\":\"activitiesOrganized\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"activities_organized\"},{\"name\":\"forumMessages\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"forum_messages\"},{\"name\":\"totalHelpPoints\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_help_points\"},{\"name\":\"networkSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"network_size\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTouserStatistics\"}],\"dbName\":\"user_statistics\"},\"videoCall\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"conversation_id\"},{\"name\":\"initiatorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"initiator_id\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"conversation\",\"relationName\":\"conversationTovideoCall\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTovideoCall\"}],\"dbName\":\"video_call\"},\"wellnessBadge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTowellnessBadge\"}],\"dbName\":\"wellness_badge\"},\"wellnessGoal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"category_id\"},{\"name\":\"targetValue\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"target_value\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"wellnessGoalProgress\",\"kind\":\"object\",\"type\":\"wellnessGoalProgress\",\"relationName\":\"wellnessGoalTowellnessGoalProgress\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"userTowellnessGoal\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTowellnessGoal\"}],\"dbName\":\"wellness_goal\"},\"wellnessGoalProgress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"goal_id\"},{\"name\":\"recordingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"recording_date\"},{\"name\":\"achievedValue\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"achieved_value\"},{\"name\":\"goalAchieved\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"goal_achieved\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"wellnessGoal\",\"kind\":\"object\",\"type\":\"wellnessGoal\",\"relationName\":\"wellnessGoalTowellnessGoalProgress\"}],\"dbName\":\"wellness_goal_progress\"},\"categoryType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTocategoryType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"category_type\"},\"categoryChapter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chapterId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"chapter_id\"},{\"name\":\"chapterName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"chapter_name\"},{\"name\":\"chapterDescription\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"chapter_description\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTocategoryChapter\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"category_chapter\"},\"category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categoryName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"category_name\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"typeId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"type_id\"},{\"name\":\"chapterId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"chapter_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"activity\",\"kind\":\"object\",\"type\":\"activity\",\"relationName\":\"activityTocategory\"},{\"name\":\"badge\",\"kind\":\"object\",\"type\":\"badge\",\"relationName\":\"badgeTocategory\"},{\"name\":\"cognitiveExercise\",\"kind\":\"object\",\"type\":\"cognitiveExercise\",\"relationName\":\"categoryTocognitiveExercise\"},{\"name\":\"collaborativeProject\",\"kind\":\"object\",\"type\":\"collaborativeProject\",\"relationName\":\"categoryTocollaborativeProject\"},{\"name\":\"exerciseProgram\",\"kind\":\"object\",\"type\":\"exerciseProgram\",\"relationName\":\"categoryToexerciseProgram\"},{\"name\":\"helpRequest\",\"kind\":\"object\",\"type\":\"helpRequest\",\"relationName\":\"categoryTohelpRequest\"},{\"name\":\"localService\",\"kind\":\"object\",\"type\":\"localService\",\"relationName\":\"categoryTolocalService\"},{\"name\":\"nutritionalAdvice\",\"kind\":\"object\",\"type\":\"nutritionalAdvice\",\"relationName\":\"categoryTonutritionalAdvice\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"resource\",\"relationName\":\"categoryToresource\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"skill\",\"relationName\":\"categoryToskill\"},{\"name\":\"urbanIssueReport\",\"kind\":\"object\",\"type\":\"urbanIssueReport\",\"relationName\":\"categoryTourbanIssueReport\"},{\"name\":\"wellnessBadge\",\"kind\":\"object\",\"type\":\"wellnessBadge\",\"relationName\":\"categoryTowellnessBadge\"},{\"name\":\"wellnessGoal\",\"kind\":\"object\",\"type\":\"wellnessGoal\",\"relationName\":\"categoryTowellnessGoal\"},{\"name\":\"categoryType\",\"kind\":\"object\",\"type\":\"categoryType\",\"relationName\":\"categoryTocategoryType\"},{\"name\":\"categoryChapter\",\"kind\":\"object\",\"type\":\"categoryChapter\",\"relationName\":\"categoryTocategoryChapter\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

